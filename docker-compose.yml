version: '3.4'

networks:
  backend:
  frontend:

services:

  orderdb:
    container_name: order-db
    image: mongo
    ports:
      - 18005:27017
    networks:
      - backend
        
  orderwebapi:
    container_name: order-api
    image: ${DOCKER_REGISTRY-}orderwebapi
    build:
      context: .
      dockerfile: OrderWebApi/Dockerfile
    networks:
      - backend
    #ports:
    # - 18004:80
    environment:
      - DB_HOST=orderdb
      - DB_NAME=dms_order


  customerdb:
    container_name: ecoms_customer
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=entx!2003n
    networks:
      - backend
    ports:
      - 18001:1433

  customerwebapi:
    container_name: customer-api
    image: ${DOCKER_REGISTRY-}customerwebapi
    build:
      context: .
      dockerfile: CustomerWebApi/Dockerfile
    networks:
      - backend
    #ports:
    #  - 18002:80
    environment:
      - DB_HOST=customerdb
      - DB_NAME=dms_customer
      - DB_SA_PASSWORD=entx!2003n


  productdb:
    container_name: product-db
    image: mysql:8.0.31-oracle
    environment:
     - MYSQL_ROOT_PASSWORD=entx!2003n
    ports:
     - 18003:3306
    networks:
     - backend

  #productdb2:
  #  image: percona:8.0
  #  container_name: ecoms_productb_p
  #  ports:
  #  - 18007:3306
  #  environment:
  #  - MYSQL_ROOT_PASSWORD=entx!2003n
  #  - MYSQL_USER=netprowebs
  #  - MYSQL_PASSWORD=entx!2003n
  #  - MYSQL_DATABASE= default_schema
  #  networks: 
  #  - backend

  #mysqlphpadmin: 
  #  image: phpmyadmin/phpmyadmin
  #  container_name: phpmyadmin
  #  ports:
  #   - 8081:80
  #  environment: 
  #   - MYSQL_ROOT_PASSWORD=entx!2003n
  #   - MYSQL_USER=netprowebs
  #   - MYSQL_PASSWORD=entx!2003n
  # #restart: always
  #  links:
  #   - productdb2:db
  #  networks:
  #  - backend

  productwebapi:
    container_name: product-api
    image: ${DOCKER_REGISTRY-}productwebapi
    build:
      context: .
      dockerfile: ProductWebApi/Dockerfile
    networks:
      - backend
 #  ports:
 #   - 18008:80
    environment:
      - DB_HOST=productdb
      - DB_NAME=dms_product
      - DB_ROOT_PASSWORD=entx!2003n

  
  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - 8001:80
    networks:
      - backend
      - frontend

  blazorserverwebui:
    container_name: blazor-web-ui
    image: ${DOCKER_REGISTRY-}blazorserverwebui
    build:
      context: .
      dockerfile: BlazorServerWebUI/Dockerfile
    ports:
      - 8002:80
    networks:
      - frontend



  authenticationwebapi:
    container_name: authentication-api
    image: ${DOCKER_REGISTRY-}authenticationwebapi
    build:
      context: .
      dockerfile: AuthenticationWebApi/Dockerfile
    networks:
      - backend

